name: Auto commit

on:
  push:
    branches:
      - master
  schedule:
    - cron: "1 * * * *"  # Runs every hour at the first minute
  # Allowing manual trigger from Actions tab
  workflow_dispatch:

jobs:
  auto_commit:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: DEBUG
        run: echo "::debug::Ref = ${{ github.ref }}"

      - uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Modify last update
        run: |
          d=$(date '+%Y-%m-%dT%H:%M:%SZ')
          echo $d > LAST_UPDATED

      - name: Wait for random time
        run: |
          # Generate a random number of minutes (between 10 to 60 minutes) to wait before committing
          RANDOM_MINUTE=$(( (RANDOM % 51) + 10 ))  # Random time between 10 and 60 minutes
          echo "Waiting for $RANDOM_MINUTE minute(s) before committing..."
          sleep $((RANDOM_MINUTE * 60))  # Convert to seconds

      - name: Commit changes
        env:
          EMAIL: ${{ secrets.USER_EMAIL }}
        run: |
          git config --local user.email "$EMAIL"
          git config --local user.name "cryptoknightsz"
          git add -A

          # Array of random commit messages
          arr[0]="chore(bot): 😂 auto commit"
          arr[1]="chore(bot): 😱 auto commit"
          arr[2]="chore(bot): 👿 auto commit"
          arr[3]="chore(bot): 💩 auto commit"
          arr[4]="chore(bot): 🙏 auto commit"
          arr[5]="chore(bot): 🙈 auto commit"
          arr[6]="chore(bot): 🐐 auto commit"
          arr[7]="chore(bot): 🤖 auto commit"
          arr[8]="chore(bot): 🟩 auto commit"
          arr[9]="chore(bot): 👻 auto commit"

          rand=$((RANDOM % ${#arr[@]}))

          git diff --quiet || git commit -m "${arr[$rand]}"

      - name: GitHub Push
        uses: ad-m/github-push-action@v0.6.0
        with:
          directory: "."
          branch: master
          github_token: ${{ secrets.GITHUB_TOKEN }}
